

{
    "1_Introduction_to_CPP": {
        "description": "C++ is a high-level, general-purpose programming language widely used for system/software development and game programming.",
        "history": "C++ was developed by Bjarne Stroustrup in 1979 as an extension of the C language.",
        "features": [
            "Object-oriented programming features like classes and objects.",
            "Low-level memory manipulation.",
            "Powerful for both system-level and application-level programming."
        ]
    },
    "2_Basic_Syntax": {
        "description": "Basic structure of a C++ program with basic syntax rules.",
        "structure": {
            "include": "#include <iostream>",
            "namespace": "using namespace std;",
            "main_function": "int main() { /* program code */ return 0; }"
        },
        "comments": {
            "single_line": "// This is a single-line comment",
            "multi_line": "/* This is a multi-line comment */"
        }
    },
    "3_Variables_and_Data_Types": {
        "description": "Variables need to be declared with a type before use.",
        "data_types": {
            "int": "Integer type.",
            "float": "Floating-point type.",
            "double": "More precise floating-point.",
            "char": "Stores a single character.",
            "bool": "Stores true or false.",
            "void": "Represents no type."
        },
        "code": {
            "variables": [
                {"type": "int", "value": "25"},
                {"type": "float", "value": "65.5"},
                {"type": "char", "value": "'A'"},
                {"type": "bool", "value": "true"}
            ]
        }
    },
    "4_Input_and_Output": {
        "description": "Using `cin` for input and `cout` for output.",
        "code": {
            "input": "cin >> age;",
            "output": "cout << 'Your age is: ' << age;"
        },
        "details": {
            "cin": "Used for taking input from the user.",
            "cout": "Used for displaying output.",
            "endl": "Used to insert a new line."
        }
    },
    "5_Control_Structures": {
        "description": "Various control structures to control the flow of the program.",
        "if_else": {
            "syntax": "if (condition) { /* code */ } else { /* code */ }",
            "code": "if (number > 5) { cout << 'Greater'; } else { cout << 'Not greater'; }"
        },
        "switch_case": {
            "syntax": "switch (expression) { case value: /* code */ break; default: /* code */ }",
            "code": "switch (day) { case 1: cout << 'Monday'; break; default: cout << 'Invalid day'; break; }"
        },
        "loops": {
            "for": {
                "syntax": "for (int i = 0; i < 5; i++) { /* code */ }",
                "code": "for (int i = 0; i < 5; i++) { cout << i; }"
            },
            "while": {
                "syntax": "while (condition) { /* code */ }",
                "code": "int i = 0; while (i < 5) { cout << i; i++; }"
            },
            "do_while": {
                "syntax": "do { /* code */ } while (condition);",
                "code": "int i = 0; do { cout << i; i++; } while (i < 5);"
            }
        }
    },
    "6_Functions": {
        "description": "Functions are blocks of code that perform specific tasks.",
        "syntax": "return_type function_name(parameters) { /* code */ }",
        "code": {
            "function_declaration": "int add(int a, int b) { return a + b; }",
            "function_call": "int result = add(10, 20);"
        },
        "function_overloading": {
            "description": "C++ allows multiple functions with the same name but different parameters.",
            "code": {
                "int_add": "int add(int a, int b) { return a + b; }",
                "float_add": "float add(float a, float b) { return a + b; }"
            }
        }
    },
    "7_Arrays": {
        "description": "Arrays are collections of variables of the same type.",
        "syntax": "type array_name[size];",
        "code": "int arr[5] = {1, 2, 3, 4, 5};",
        "access": "arr[0], arr[1], ... arr[n]"
    },
    "8_Pointers": {
        "description": "Pointers store the memory address of a variable.",
        "syntax": "type *ptr;",
        "code": {
            "pointer_declaration": "int *ptr = &num;",
            "dereferencing": "cout << *ptr;"
        }
    },
    "9_Object_Oriented_Programming": {
        "description": "C++ supports object-oriented programming with classes and objects.",
        "concepts": {
            "classes_and_objects": {
                "description": "A class is a blueprint for creating objects.",
                "code": {
                    "class_declaration": "class Person { public: string name; void introduce() { cout << name; } };",
                    "object_creation": "Person p; p.name = 'John'; p.introduce();"
                }
            },
            "inheritance": {
                "description": "Inheritance allows one class to inherit properties and methods of another.",
                "code": {
                    "base_class": "class Animal { public: void eat() { cout << 'Eating'; } };",
                    "derived_class": "class Dog : public Animal { public: void bark() { cout << 'Barking'; } };"
                }
            },
            "polymorphism": {
                "description": "Polymorphism allows methods to behave differently based on the object.",
                "code": {
                    "virtual_function": "class Animal { public: virtual void sound() { cout << 'Animal sound'; } };",
                    "overridden_function": "class Dog : public Animal { public: void sound() { cout << 'Bark'; } };"
                }
            }
        }
    },
    "10_Memory_Management": {
        "description": "Memory management in C++ involves dynamic allocation and deallocation.",
        "syntax": {
            "new": "int* ptr = new int(10);",
            "delete": "delete ptr;"
        }
    }
}

