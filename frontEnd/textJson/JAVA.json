{
  "Java_Course": {
    "Introduction_to_Java": {
      "description": "Java is a versatile, object-oriented programming language widely used for building applications ranging from web apps to mobile apps and enterprise-level systems. Itâ€™s platform-independent, meaning you can write code once and run it anywhere.",
      "environment_setup": {
        "install_jdk": "Download and install the latest JDK from Oracle's website or OpenJDK.",
        "install_ide": "Use IntelliJ IDEA, Eclipse, or NetBeans for writing Java code.",
        "verify_installation": "Open a terminal/command prompt and type: java -version"
      }
    },
    "First_Program_Hello_World": {
      "code": "public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}",
      "steps": [
        "Save this file as HelloWorld.java.",
        "Compile: javac HelloWorld.java",
        "Run: java HelloWorld"
      ],
      "explanation": {
        "public_class": "Declares a class named HelloWorld.",
        "main_method": "The main method where program execution begins.",
        "println": "Prints text to the console."
      }
    },
    "Java_Basics": {
      "variables_and_data_types": {
        "code": "int age = 25;\ndouble salary = 50000.5;\nchar grade = 'A';\nboolean isStudent = true;\nString name = \"John\";",
        "key_points": [
          "Java is statically typed; you must declare variable types.",
          "Common types: int, float, double, boolean, char, String."
        ]
      },
      "operators": {
        "code": "int a = 10, b = 5;\nSystem.out.println(a + b); // Arithmetic\nSystem.out.println(a > b); // Comparison\na += b; // Assignment"
      },
      "control_structures": {
        "if_else": {
          "code": "if (age > 18) {\n    System.out.println(\"Adult\");\n} else {\n    System.out.println(\"Minor\");\n}"
        },
        "switch": {
          "code": "switch (grade) {\n    case 'A': System.out.println(\"Excellent\"); break;\n    case 'B': System.out.println(\"Good\"); break;\n    default: System.out.println(\"Average\");\n}"
        },
        "loops": {
          "for_loop": {
            "code": "for (int i = 0; i < 5; i++) {\n    System.out.println(i);\n}"
          },
          "while_loop": {
            "code": "int i = 0;\nwhile (i < 5) {\n    System.out.println(i);\n    i++;\n}"
          }
        }
      }
    },
    "Object_Oriented_Programming": {
      "classes_and_objects": {
        "code": "class Car {\n    String brand;\n    int speed;\n    void drive() {\n        System.out.println(\"Driving \" + brand);\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Car myCar = new Car();\n        myCar.brand = \"Toyota\";\n        myCar.speed = 120;\n        myCar.drive();\n    }\n}"
      },
      "inheritance": {
        "code": "class Vehicle {\n    void start() {\n        System.out.println(\"Vehicle started\");\n    }\n}\nclass Car extends Vehicle {\n    void honk() {\n        System.out.println(\"Car horn\");\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Car myCar = new Car();\n        myCar.start();\n        myCar.honk();\n    }\n}"
      },
      "polymorphism": {
        "code": "class Animal {\n    void sound() {\n        System.out.println(\"Animal sound\");\n    }\n}\nclass Dog extends Animal {\n    @Override\n    void sound() {\n        System.out.println(\"Bark\");\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Animal myDog = new Dog();\n        myDog.sound();\n    }\n}"
      },
      "encapsulation": {
        "code": "class Person {\n    private String name;\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Person person = new Person();\n        person.setName(\"Alice\");\n        System.out.println(person.getName());\n    }\n}"
      }
    },
    "Intermediate_Topics": {
      "exception_handling": {
        "code": "try {\n    int result = 10 / 0;\n} catch (ArithmeticException e) {\n    System.out.println(\"Cannot divide by zero\");\n} finally {\n    System.out.println(\"Execution complete\");\n}"
      },
      "collections_framework": {
        "code": "import java.util.ArrayList;\npublic class Main {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Apple\");\n        list.add(\"Banana\");\n        list.forEach(System.out::println);\n    }\n}"
      },
      "file_handling": {
        "code": "import java.io.FileWriter;\nimport java.io.IOException;\npublic class Main {\n    public static void main(String[] args) {\n        try (FileWriter writer = new FileWriter(\"example.txt\")) {\n            writer.write(\"Hello, file!\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
      },
      "multithreading": {
        "code": "class MyThread extends Thread {\n    public void run() {\n        System.out.println(\"Thread running\");\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        MyThread t1 = new MyThread();\n        t1.start();\n    }\n}"
      },
      "java_8_features": {
        "lambda_expressions": {
          "code": "interface MathOperation {\n    int operation(int a, int b);\n}\npublic class Main {\n    public static void main(String[] args) {\n        MathOperation add = (a, b) -> a + b;\n        System.out.println(add.operation(5, 3));\n    }\n}"
        }
      }
    },
    "Projects_to_Practice": [
      "Calculator",
      "Library Management System",
      "Banking Application",
      "Simple Game (e.g., Tic Tac Toe)"
    ]
  }
}
